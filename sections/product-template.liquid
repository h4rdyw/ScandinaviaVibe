{% comment %}theme-check-disable{% endcomment %}

{% assign current_product = product.selected_or_first_available_variant %} 
{% assign product_image = current_product.featured_image | default: product.featured_image %}

    {% for tag in product.tags %}
       {% if tag contains 'Special' %}
        {% assign specialbox = 'true' %}
      {% endif %}    
      {% if tag contains 'Award' %}
          {% assign awardbox = 'true' %}
      {% endif %}
      {% if tag contains 'Final Sale' %}
        {% assign finalsale = 'true' %}
       {% endif %}
    {% endfor %}
     
<section class="container py-5" id="product_details">
  <p></p>
    <div class="row flex-column-reverse flex-lg-row">
        <div class="d-flex flex-fill flex-column col-lg-8 col-md-12 col-12">
            
              <div class="d-flex flex-fill swiper-container swiper-container-{{- product.id -}}">
                <div class="swiper-wrapper flex-fill">
                  {% if product.images.size > 1  %}
                    {% assign imgnum = 'true' %}
                  {% endif %}
                  


                  {% for image in product.images %}            
                    <div variant-img-id="{{ image.id }}" class="swiper-slide" variant-id="">
                      <img src="{{ image.src | img_url : 'master' }}" alt="{{ image.alt | escape }}" width="480" height="480" loading="lazy"/>

                      {% if imgnum == 'true' %}                       
                      
                      <div class="swiper-button-prev swiper-button-prev-{{- product.id -}}"></div>                     
                      <div class="swiper-button-next swiper-button-next-{{- product.id -}}"></div>

                    {% endif %}

                    </div>          
                  {% endfor %}    
                </div>
              </div>
              <p span class="text-line"></p>
              <!--<div class="text-product-desc"><p>{% render 'product-description' ,product:product, type: 'long' %}</p></div>-->

             <div class="w-100 mx-auto my-1">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                  <li class="nav-item" role="presentation">
                    <button class="nav-link nav-link-prd active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home" type="button" role="tab" aria-controls="home" aria-selected="true">Description</button>
                  </li>                                
                  <li class="nav-item" role="presentation">
                    <button class="nav-link nav-link-prd" id="media-tab" data-bs-toggle="tab" data-bs-target="#media" type="button" role="tab" aria-controls="media" aria-selected="false">Media</button>
                  </li>                 
                  <li class="nav-item" role="presentation">
                    <button class="nav-link nav-link-prd" id="contact-tab" data-bs-toggle="tab" data-bs-target="#contact" type="button" role="tab" aria-controls="contact" aria-selected="false">Info</button>
                  </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                  <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                    <div class="text-product-desc"><p>{% render 'product-description' ,product:product, type: 'long' %}</p></div> 
                  </div>
                  <div class="tab-pane fade" id="media" role="tabpanel" aria-labelledby="media-tab">
                    <div class="container px-0 mx-auto">
                      <div class="d-flex g-3 row row-cols row-cols-xxl-2 row-cols-lg-2 row-cols-md-2 row-cols-1 align-items-center
                        ">      
                      {% render 'product-video', product:product %}      
                      </div>
                    </div>        
                    </div>
                  <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab"><div class="text-product-desc">{% if section.settings.subtitle != blank %}       
                  <div class="text-header-title"><p>{{ section.settings.subtitle }}</p></div>
                  <div><p>{{ section.settings.subinfo }}</p></div>                
                  
                  {% endif %}</div></div>
                </div>
              </div>             
        </div>
        
        <div class="d-flex flex-column flex-fill col-lg-4 col-md-12 col-12">
          <h1 class="text-product-detail-title">{{ product.title }} </h1>

          <div class="px-0 pb-2 mx-0 d-flex flex-row">
            {% if specialbox == 'true' %}      
                   {% assign specialbox = 'false' %}              
                   {% assign iconstyle = 'style="position:relative;left:1px;"' %} 
                   <svg class="star-badge px-0 mx-0" style="position:relative;left:0px !important;">{% render 'star-badge' %}</svg>  
            {% else %}
                   {% assign iconstyle = 'style="position:relative;margin:auto;transform:translateX(-40px);"' %} 
            {% endif %} 

            {% if awardbox == 'true' %}    
                {% assign awardbox = 'false' %}                
                <svg class="award-badge px-0 mx-0" {{ iconstyle }}>{% render 'award-badge' %}</svg>  
            {% endif %} 
            </div>          

            {% if finalsale == 'true' %}
              <p id="final-sale" class="text-header-title">FINAL SALE*</p>            
            {% endif %}

            <p id="prd-price" class="text-header-title" style="line-height:2.5rem;">
              {% if product.compare_at_price_max > 0 %}
                {% render 'discount', product : product %}<svg class="tag-badge">{% render 'tag-badge' %} </svg>
                <del><span style="color: #AB0000;">{{ product.compare_at_price_max | money_without_trailing_zeros }}</span></del>
              
              {% endif %}

              
              {% if product.price_varies %} from {{ product.price_min | money_without_trailing_zeros }} {% else %} {{ product.price | money_without_trailing_zeros }} {% endif %}
            </p>
            {% if section.settings.show_short_description == true %}       
            <div class="text-product-desc"><p>{% render 'product-description' ,product:product, type: 'short' %}</p></div>
            
            {% endif %}

            {% if section.settings.subtitle != blank %}       
            <div class="text-header-title"><p>{{ section.settings.subtitle }}</p></div>
            
            {% endif %}
            {% form 'product', product, class:"product-form, id:"AddToCartForm %}
              {% assign availability_count = 0 %}    

                <div id="selectOptions" class="mb-3">
                  {% if product.has_only_default_variant %}
                    <input name="id" value="{{ product.first_available_variant.id }}" type="hidden">
                    {% for variant in product.variants %}
                      {% if variant.available %}
                          {% assign availability = availability_count | plus: 1 %}
                      {% endif %}    
                    {% endfor %}

                  {% else %}

                    <select name="id" id="productSelect" class="form-select">

                        {% for variant in product.variants %}
                            {% if variant.available %}
                                {% assign availability = availability_count | plus: 1 %}
                                {% if variant.compare_at_price > 0 and variant.compare_at_price > variant.price %}
                                  {% assign priceold = variant.compare_at_price | money_without_trailing_zeros  %}
                                  {% assign pricenew = variant.price | money_without_trailing_zeros  %}
                                  {% assign desc = variant.title | append : ' - ( was ' | append : priceold  | append : ' ) now ' | append : pricenew %}
                                {% else %}
                                  {% assign pricenew = variant.price | money_without_trailing_zeros  %}
                                  {% assign desc = variant.title | append : ' ' | append : pricenew %}
                                {% endif %}
                          {% assign availability = availability_count | plus: 1 %}
                                <option value="{{ variant.id }}">{{ desc }}</option>
                            {% else %}
                                <option value="{{ variant.id }}" disabled="disabled"> {{ variant.title }}</option>
                            {% endif %}                       
                        {% endfor %}
                    </select>
                  {% endif %}  
                </div>
                
                {% comment %} <div id="qty-part" class="row row-cols-2 mb-3">
                  <div class="col text-end">
                  Quantity
                  </div>
                  <div class="col">
                    <input type="number" class="form-control form-inline" name="quantity" id="Quantity" value="1" min="1">
                  </div>                  
                </div> {% endcomment %}

                <ul id="qty-part" class="list-inline mb-4">
                  <li class="list-inline-item me-3"><strong>Quantity</strong></li>
                  <li class="list-inline-item">
                    <div class="border d-flex align-items-center justify-content-between p-1">
                      <div class="quantity py-0">
                        <button class="dec-btn p-0" onclick="event.preventDefault();decrease(this)"><i class="fas fa-caret-left"></i></button>
                        <input class="form-control border-0 shadow-0 p-0 quantity-result" type="text" name="quantity" id="Quantity" value="1" aria-label="Quantity" style="font-weight:600;" >
                        <button class="inc-btn p-0" onclick="event.preventDefault();increase(this)"><i class="fas fa-caret-right"></i></button>
                      </div>
                    </div>
                  </li>
                </ul>  
                <p></p>
                <button type="submit" name="add" id="AddToCart" class="btn-add-to-cart w-100" {% unless availability > 0 %} disabled="disabled" >Sold Out {% else %} >Add to Cart {% endunless %}</button>
                <p></p>
              

                {% if section.settings.dynamic_button_checkbox == true %}       
                  {% if availability > 0 %}          
                    {{ form  | payment_button }}
                  {% endif %}
                {% endif %}
                <!--<p id="pick"></p>-->
              {% endform %}  
        </div>
      </div>
</section>

<!-- / element structure
<div id="product_recomm" class="container">
    <section id="product_recommendation" class="row content-justify-center my-5">
        <div class="text-center"><h1>Also in store</h1></div>
        <div class="row d-flex g-3 row-cols-lg-6 row-cols-md-4 row-cols-sm-3 row-cols-2 py-2" id="product_recommendation_body"></div>
    </section>
</div> 
/-->

{% render 'prd-modal' %}
<!--
<div id="productInfoModal" class="modal modalfade" tabIndex="-1" aria-hidden="true" style="z-index:2001;">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
        <div class="modal-content rounded-0">
            <div class="modal-header" style="border-bottom: none;user-select: none;">
              <h1 id="productInfoTitle" class="text-product-detail-title"></h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                      <div class="col-12 col-md-6">
                        <img class="img-fluid modal-img" src="" id="productInfoImg" alt="">
                        <div id="badge"></div>
                      </div>
                      <div class="col-12 col-md-6">
                        <p class="text-header-title" id="productInfoPrice" class="text-product-desc"></p>
                        <p id="productInfoDescription" class="text-product-desc"></p>
                        <div id="star-badge"></div>
                        <div id="award-badge"></div>
                      </div>
                </div>             
            </div>
            <div class="modal-footer" style="border-top: none;">
              <div class="col-12 col-md-6"></div>
              <div class="col-12 col-md-6 px-2">
                <form action="#" id="addToCartForm" class="row">
                  <select name="id" id="modalItemID" class="form-select col-auto">
                  </select>
                  <p></p>
                  <div class="row">
                      <input type="number" name="quantity" label="Quantity" value="1" id="modalItemQuantity" min="1" max="9999" class="col-auto w-100">    
                      <p></p>           
                      <button type="submit" id="btnAddToCart" class="btn-add-to-cart col-auto w-100">Add to Cart</button>                
                  </div>    
                  <p></p>
                </form>
              </div>
            </div>
        </div>
    </div>
</div>
-->
{{ 'product.css' | asset_url | stylesheet_tag }}
{% comment %} {{ 'application.css' | asset_url | stylesheet_tag }} {% endcomment %}

<style scoped>
  input {
    border-left: none !important;
    border-right: none !important;
    border-top: none !important;
    border-bottom: 1px solid #ced4da !important;
  }
  
  .form-select {
      border-left: none;
      border-right: none;
      border-top: none;
  }  


  .icon {
    height: 30px;
    width: 30px;
    fill: transparent;
    stroke: #11171B;
    transition: fill 0.3s ease;
  }

  .active .icon {
    fill: #F652A0;
    stroke: transparent;
  }

  .snippet-wishlist {
    position: relative;
    padding-top: 10px;
    padding-bottom: 10px;
  }  

  .wishlist-badge {  
    left: 0;
  }

  
  
  
</style>
<script>  
window.addEventListener('load', 
  function() { 
    checkLocaleBtn();         
    const element = document.querySelector('#productSelect');
    let changeEvent = new Event('change');
    element.dispatchEvent(changeEvent);
  }, false);       




const json_product = {{ product | json }};
//console.log(json_product);   

const swiper = new Swiper(".swiper-container-{{- product.id -}}", {
    slidesPerView: 1,
    centeredSlides: true,
    effect: "fade",
    fadeEffect: { crossFade: true },
    loop: true,
    observer: true, 
    observeParents: true,  
    navigation: {
      prevEl: ".swiper-button-prev-{{- product.id -}}",
      nextEl: ".swiper-button-next-{{- product.id -}}"
    }    
  })

  {% comment %} swiper.on('slideChange', function () {
    let slideIndex = this.activeIndex 
    console.log("Index : " + slideIndex);     
    let attributeName = document.querySelectorAll(`[data-swiper-slide-index='${slideIndex}']`);     
    attributeName.forEach( e => {
      //console.log(e.attributes);
      let variantimgid = e.attributes['variant-img-id'].value;
      //console.log(variantimgid);
      
      const arrresult = json_product.variants.map(e => e.featured_image);
      //console.log(arrresult);

      const varidresult = arrresult.find( ({ id }) => id === +variantimgid );
      //console.log(varidresult);
      const variant_id=varidresult.variant_ids[0];
      //console.log(variant_id);

      document.getElementById('productSelect').value = variant_id

    })
  });
   {% endcomment %}
    //var productRecommendationBody = document.getElementById('product_recommendation_body');
    fetch('/recommendations/products.json?product_id={{ product.id }}')
    .then(resp => resp.json())
    .then(({ products }) =>{
        
        var arrProducts = Array.from(products);
        //console.log(arrProducts);
        //add eventlistener, later to be dispatched when new element build (product recommendation) completed
        arrProducts.forEach( function (el) {
            //console.log(el);
            document.addEventListener( 'dispatchPrd', function ( event ) {
                //console.log(`registering productInfoAnchor ${el.id}`);
                getProductAnchors(`productInfoAnchor-${el.id}`);
              });
        })
               
        //console.log(products);
        if(products.length > 0) {
        
            /* element 
                <div class="container">
                    <section id="product_recommendation" class="row content-justify-center my-5">
                        <div class="text-center"><h1>Also in store</h1></div>
                        <div class="row d-flex g-3 row-cols-lg-6 row-cols-md-4 row-cols-sm-3 row-cols-2 py-2" id="product_recommendation_body"></div>
                    </section>
                </div>
            */

            const htmlMarkup = `
                 <section id="product_recommendation" class="content-justify-center my-5">
                    <div class="text-center"><h1>Also in store</h1></div>
                    <div class="d-flex flex-wrap g-3 row row-cols row-cols-xl-4 row-cols-lg-3 row-cols-md-2 row-cols-sm-2 row-cols-2 py-2" id="product_recommendation_body">
            `;

            html = htmlMarkup.trim();
            var productRecomm = document.createElement('div');
            productRecomm.className = 'container';
            
            products.forEach(function(item,index) {

            //console.log(item);
            arrProducts[item] = `productInfoAnchor-${item.id}`;
            
            ;    
            if (+item.compare_at_price > 0 && +item.compare_at_price > +item.price ) { 
              const itemsavings = (((+item.compare_at_price-item.price)/item.compare_at_price) * 100).toFixed(0);
              //console.log("Item Saving :" + itemsavings);

              var savingspct=`${itemsavings}%`;  
            } else {
              var savingspct=``;  
            }

            let prdPrice = formatCcy((+item.price / 100));                   
            let prdPriceMin = formatCcy((+item.price_min / 100));                   
            let prdComparePrice = formatCcy((+item.compare_at_price_max / 100));                   
            let from = '';
            let finalsaletag = '';

            if (item.price_varies) from = `from `;

            if (item.tags.includes('Final Sale')) finalsaletag = 'FINAL SALE*'; 

            var card, iconstyle;

            card = `<div class="col d-flex">`;
            card += `<div class="img-wrapper d-flex">`;
            card += `<div class="card d-flex flex-fill border-0 shadow-sm">`;

            if(item.images.length > 0) {
                card += `<div class="inner-img">`;
                card += `<a href="javascript:;"   id="productInfoAnchor-${item.id}" product-handle="${item.handle}" 
                        product-price="${from} ${prdPrice}"><img class="card-img-top" width="240" height="240" src="${item.images[0]}" loading="lazy" alt="${item.title}"></a>`;
                
                if (item.available) {                
                card += `<div class="text-hover"><svg class="heart-badge" alt="quick shop">{% render 'icon-bag' %}</svg></br>QUICK SHOP</div></div>`    
                } else {
                card += `<div class="text-hover">SOLD OUT</div></div>`;
                }


            }          
            card += `<div class="card-body d-flex flex-column justify-content-end text-center bg-light pb-1">`;
            card += `<p class="text-product-title"><a class="text-product-link" style="font-size:1.25rem;" href="${item.url}">${item.title}</a></p>`;
            card += `<p span class="text-line"></p>`;

            if (item.compare_at_price_max > 0 ) { 

              card += `<p>${finalsaletag} ${savingspct}<svg class="tag-badge">{% render 'tag-badge' %} </svg>
                <del><span style="color: #AB0000;">${prdComparePrice}</span></del> ${from} ${prdPrice}</p>`;

               
            } else {
              card += `<p>${from} ${prdPriceMin}</p>`;     
            }
            
            card += `<button type="button" aria-label="Add to wishlist" class="wishlist-badge" button-wishlist data-product-handle="${item.handle}"><svg class="icon">{% render 'heart-badge' %}</svg></button>`;

            if (item.tags.includes('Special')) {
              card += `<div><svg class="star-badge">{% render 'star-badge' %}</svg></div>`; 
              iconstyle = ``;

            } else {
              iconstyle = `style="transform: translateX(-35px);"`;
            }

            if (item.tags.includes('Award')) {
              card += `<div><svg class="award-badge" ${iconstyle}>{% render 'award-badge' %}</svg></div>`; 
            }

            card += `</div></div></div></div>`;
            
            html += card;                           

        });
        
        html += `</div></section>`;

        productRecomm.innerHTML = html;  
         
        //insert element after "product_details"
        const reference = document.getElementById("product_details");        
        reference.after(productRecomm);
        
        var wishlistSnippet =  document.createElement('div');   
        wishlistSnippet.className = 'snippet-wishlist';

        wishlistcard = `<button type="button" aria-label="Add to wishlist" class="wishlist-badge" button-wishlist data-product-handle="{{product.handle}}"><svg class="icon">{% render 'heart-badge' %}</svg></button>`;     

        
        wishlistSnippet.innerHTML = wishlistcard;

        const referenceTitle = document.getElementById("qty-part");        
        referenceTitle.after(wishlistSnippet);
        
        // Create a custom event and dispatch to setup PopUp Modal 
        let myEvent = new CustomEvent('dispatchPrd', {
	        bubbles: true,
	        cancelable: true
            });

        setTimeout(()=>{
            const body = document.body;
            document.dispatchEvent(myEvent);     
            initButtons();       
          },2)

        clearTimeout();
        }     
    });
 
     function formatCcy(amount) {
        var ccyTemp = parseFloat(amount).toLocaleString('en-US', {
          style: 'currency',
          currency: 'USD',
        });
      
        //remove trailing zeros
        var ccyFormated =
          ccyTemp.slice(-3) === '.00'
            ? ccyTemp.slice(0, -3)
            : ccyTemp.slice(-1) === '0'
            ? ccyTemp.slice(0, -1)
            : ccyTemp;
        return ccyFormated;
      }

    var PrdTemplate;
 
    
    
    const SelectElement = document.getElementById("productSelect") || false ; 
    //const checkValue = SelectElement.options[SelectElement.selectedIndex].value;
    //const checkText = SelectElement.options[SelectElement.selectedIndex].text;
    if (SelectElement) {
    SelectElement.addEventListener("click", (e) => varSelectChange(e) );
    SelectElement.addEventListener("change", (e) => varSelectChange(e) );
    SelectElement.addEventListener("focus", (e) => varSelectChange(e) );
    }
 
  function varSelectChange (e) {
    const value = e.target.value;
    //const text = SelectElement.options[SelectElement.selectedIndex].text;
    const variantresult = json_product.variants.find( ({ id }) => id === +value );

    let variant_img_id = (variantresult.featured_image === null) ? false : variantresult.featured_image.id ;

    if (value) {
        //document.getElementById("pick").textContent = `Value Selected: ${value} ${text}`;
        //console.log(variantresult);

        const curr_price = +variantresult.price/100;
        const variantPrice = formatCcy((+variantresult.price / 100));    
        const compare_price = +variantresult.compare_at_price/100;                
        const variantComparePrice = formatCcy((+variantresult.compare_at_price / 100));
        const savings = ((+(compare_price-curr_price)/compare_price) * 100).toFixed(0);               
        if (+variantresult.compare_at_price > 0 && +variantresult.compare_at_price > +variantresult.price ) { 
          var pricetag=`${savings}% <svg class="tag-badge">{% render 'tag-badge' %} </svg>
          <del><span style="color: #AB0000;">${variantComparePrice}</span></del> ${variantPrice}`;
        } else { 
          var pricetag=`${variantPrice}`;
        } 

        document.getElementById("prd-price").innerHTML = pricetag ; 

        if (variant_img_id ) {
          let variantimg = document.querySelector(`[variant-img-id='${variant_img_id}']`); 
          if ( variantimg ){
            //console.log(variantimg);
            let variantimgindex = +variantimg.getAttribute('data-swiper-slide-index');
            // +1 for swiperjs
            variantimgindex += 1;           
            //console.log(variantimgindex);
            swiper.slideTo(variantimgindex);
            swiper.update();
          }
        }            
        
    } else {
        //document.getElementById("pick").textContent = "";
    }   
  };

function increase(x) {
    
    var inputVal = x.previousElementSibling;
    inputVal.value++;
}
function decrease(x) {
    var inputVal = x.nextElementSibling;
    if (inputVal.value > 1) {
        inputVal.value--;
    }
}
</script>

{% schema %}
{
    "name": "product detail page",
    "settings": [
    {
        "type": "checkbox",
        "id": "dynamic_button_checkbox",
        "label": "Enable Dynamic Buy Button",
        "default": false
    },
    {
      "type": "checkbox",
      "id": "show_short_description",
      "label": "Show Short Description",
      "default": false
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Sub Heading Info"
      
    },
    {
      "type": "richtext",
      "id": "subinfo",
      "label": "Additional Info"
      
    }
  ]
}
{% endschema %}


 
{% comment %}theme-check-enable{% endcomment %}
