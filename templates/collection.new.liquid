{% comment %}theme-check-disable{% endcomment %}
{% assign xxlcard = settings.xxl_card %}
{% assign xlcard = settings.xl_card %}
{% assign lcard = settings.l_card %}
{% assign mcard = settings.m_card %}
{% assign scard = settings.s_card %}
{% assign xscard = settings.xs_card %}
{% assign cardwidth = settings.card_img_width_coll %}
{% assign cardheight = settings.card_img_height_coll %}

{% section 'brand-list' %}

<section class="container py-5">
    {% paginate collection.products by 12 %}
    
      <h1 class="text-center py-2">{{ collection.title }}</h1>
  
  
      <div class="row row-cols-md-6 row-cols-sm-2">
        <div class="col">
          <div class="clearfix filter">
            <p>Sort by :</p>
            <select name="sorting" id="sort_by" class="form-select form-select-sm w-auto">
              {% for option in collection.sort_options %}
                <option value="{{ option.value }}"
                {% if option.value == collection.sort_by %}
                  selected="selected"
                {% endif %}
              >{{ option.name }}</option>
              {% endfor %}
            </select>
          </div>  
        </div>
        
        <div class="col">
          <div class="clearfix filter">
            {% if collection.handle == 'collection' %}
              <p>Browse type:</p>
              <select name="filter_type" id="filter_by_type"  class="form-select form-select-sm w-auto">
              <option value="">All</option>
              {% for product_type in collection.all_types %}
              {% if current_tags contains product_type %}
              <option value="{{ product_type | handle }}" selected>{{ product_type }}</option>
              {% else %}
              <option value="{{ product_type | handle }}">{{ product_type }}</option>
              {% endif %}
              {% endfor %}
              </select>
            {% endif %}
          </div>   
      
        </div>
  
      </div>
    {% comment %} <div class="col justify-content-center">
      <div class="clearfix filter">
      {% if collection.handle == 'collection' %}
        <p>Browse by tag:</p>
        <select class="coll-filter">
        <option value="">All</option>
        {% for tag in collection.all_tags %}
        {% if current_tags contains tag %}
        <option value="{{ tag | handle }}" selected>{{ tag }}</option>
        {% else %}
        <option value="{{ tag | handle }}">{{ tag }}</option>
        {% endif %}
        {% endfor %}
        </select>
      {% endif %}
      </div>         
    </div> {% endcomment %}
  
   <div class="row d-flex g-3 row-cols-xxl-{{ xxlcard}} row-cols-xl-{{ xlcard }} row-cols-lg-{{ lcard }} row-cols-md-{{ mcard }} row-cols-sm-{{ scard }} row-cols-{{ xscard }} py-2">
  
        {% comment %} {% assign image = product.featured_media.preview_image %}
  
        {% assign product_short_description = product.description | truncatewords: 15, '...' %}
        {% assign product_descriptions = product.description | split: '$$$$$$' %}
  
        {% assign product_descriptions_length = product_descriptions.size %}
  
        {% if product_descriptions_length > 1 %}
          {% assign product_short_description = product_descriptions[0] %}
          {% assign product_description = product_descriptions[1] %}
  
        {% endif %} 
   {% endcomment %}
          
                    
            {% render 'prd-card' for collection.products as product , cardwidth : cardwidth , cardheight : cardheight %}
       
    </div>
    
    {% render 'pagination' , paginate: paginate %}
    {% endpaginate %}
  
  </section>
  
  {% render 'prd-modal' %}
 

  <style>
    .form-select {
        border-left: none;
        border-right: none;
        border-top: none;
    }
    input {
      border-left: none;
      border-right: none;
      border-top: none;
      border-bottom: 1px solid #ced4da;
  }
  
    </style>
  {% comment %} <script>  
  
    var collFilters = jQuery('.coll-filter');
    collFilters.change(function() {
    var newTags = [];
    collFilters.each(function() { 
    if (jQuery(this).val()) {
    newTags.push(jQuery(this).val());
    }
    });
    if (newTags.length) {
    var query = newTags.join('+');
    window.location.href = jQuery('{{ 'tag' | link_to_tag: 'tag' }}').attr('href').replace('tag', query);
    } 
    else {
    {% if collection.handle %}
    window.location.href = '/collections/{{ collection.handle }}';
    {% elsif collection.products.first.type == collection.title %}
    window.location.href = '{{ collection.title | url_for_type }}';
    {% elsif collection.products.first.vendor == collection.title %}
    window.location.href = '{{ collection.title | url_for_vendor }}';
    {% endif %}
    }
    });
  </script> {% endcomment %}
  <script>  
  
    var collFilters2 = jQuery('#filter_by_type');
    collFilters2.change(function() {
    var newTags2 = [];
    collFilters2.each(function() { 
    if (jQuery(this).val()) {
    newTags2.push(jQuery(this).val());
    }
    });
    if (newTags2.length) {
    var query = newTags2.join('+');
    window.location.href = jQuery('{{ 'product_type' | link_to_tag: 'product_type' }}').attr('href').replace('product_type', query);
    } 
    else {
    {% if collection.handle %}
    window.location.href = '/collections/{{ collection.handle }}';
    {% elsif collection.products.first.type == collection.title %}
    window.location.href = '{{ collection.title | url_for_type }}';
    {% elsif collection.products.first.vendor == collection.title %}
    window.location.href = '{{ collection.title | url_for_vendor }}';
    {% endif %}
    }
    });
  </script>
  {% comment %}theme-check-enable{% endcomment %}
  